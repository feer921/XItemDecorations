//buildscript {
//    repositories {
//        google()
//        jcenter()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:4.0.1'
//    }
//}


apply{ObjectConfigurationAction action ->
    plugin 'com.jfrog.bintray' //依赖 jfrog 的插件
    plugin 'maven-publish' //依赖 maven-publish 的插件
}
def bintrayFile = rootProject.file('bintray.properties')
def bintrayProperties = new Properties()
bintrayProperties.load(new FileInputStream(bintrayFile))

String bintrayUserName = bintrayProperties['bintray.user']

def bintrayUserOrg = bintrayProperties['bintray.userOrg']
String bintrayApi = bintrayProperties['bintray.apikey']

def bintrayRepoName = bintrayProperties['bintray.repo']

def bintrayRepoVcsUrl = bintrayProperties['bintray.vcsUrl']

def bintrayLicenses = bintrayProperties['bintray.licenses']

def bintrayPkgName = bintrayProperties['bintray.pkgname']

def libraryDescription = bintrayProperties['bintray.artifact.desc']

def isAndroid = project.hasProperty('android')

if (isAndroid) { // Android libraries
    task sourcesJar(type: Jar) {
        getArchiveClassifier().set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
//        classifier = 'sources'
        getArchiveClassifier().set('sources')
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


bintray {
    user = bintrayUserName
    key = bintrayApi

    configurations = ['archives']
    pkg {
        repo = bintrayRepoName //bintray[jfrog]上的仓库名称
        name = bintrayPkgName //bintray[jfrog] 包名
        userOrg = bintrayUserOrg
        desc = libraryDescription
//        websiteUrl = siteUrl
        vcsUrl = bintrayRepoVcsUrl
        licenses = bintrayLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            name = properties['bintray.artifact.versionName']
            desc = properties['bintray.artifact.versionDesc']
            released  = new Date()
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

javadoc {
    options{
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {

    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                println("*************88  curProject:  $project.name " +
                        " groutId : $project.group "+
                        " version: $project.version")

                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = project.group
                artifactId = project.name
                version = project.version
            }
        }
    }
}